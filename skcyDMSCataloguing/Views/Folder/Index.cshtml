@model IEnumerable<skcyDMSCataloguing.Models.Folder>


@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService authorizationService

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    @if ((await authorizationService.AuthorizeAsync(User, "CreateBusEntityPolicy")).Succeeded)
    {
        <a asp-action="Create">Create New</a>
    }
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.FolderName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CustDataCIFNo)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CustData.CustomerName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CustData.CustomerIDN)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CustData.PrjHelixes1)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CustData.PrjVelocities1)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CustData.PrjVelocities2)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.FolderName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CustDataCIFNo)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CustData.CustomerName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CustData.CustomerIDN)
                </td>
                <td>
                    @{ if (item.CustData.PrjHelixes1 != null)

                            foreach (var hlx in item.CustData.PrjHelixes1)
                            {
                                @hlx.Helix1Pool
                                <br />
                            }
                    }
                </td>
                <td>
                    @{ if (item.CustData.PrjVelocities1 != null)

                            foreach (var vel1 in item.CustData.PrjVelocities1)
                            {
                                @vel1.CustDataCIFNo.Any()
                                <br />
                            }
                    }
                </td>
                <td>
                    @{ if (item.CustData.PrjVelocities2 != null)

                            foreach (var vel2 in item.CustData.PrjVelocities2)
                            {
                                @vel2.CustDataCIFNo.Any()
                                <br />
                            }
                    }
                </td>
                <td >
                    @if ((await authorizationService.AuthorizeAsync(User, "ModifyBusEntityPolicy")).Succeeded) {
                    <a asp-action="Edit" asp-route-id="@item.ID">Edit</a>  
                    } 
                    @if ((await authorizationService.AuthorizeAsync(User, "ViewBusEntityPolicy")).Succeeded) {
                <a asp-action="Details" asp-route-id="@item.ID">Details  -</a>   
                    }
                    @if ((await authorizationService.AuthorizeAsync(User, "DeleteBusEntityPolicy")).Succeeded) {
                    <a asp-action="Delete" asp-route-id="@item.ID">Delete</a>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>
